use anchor_lang::prelude::*;

declare_id!("Init111111111111111111111111111111111111111");

#[program]
pub mod profile_manager {
    use super::*;

    pub fn setup_profile(ctx: Context<SetupProfile>, name: String) -> Result<()> {
        let profile = &mut ctx.accounts.profile;
        profile.owner = *ctx.accounts.user.key;
        profile.name = name;
        Ok(())
    }
}

#[derive(Accounts)]
pub struct SetupProfile<'info> {
    #[account(
        init_if_needed,
        payer = user,
        space = 8 + 32 + 64,
        seeds = [b"profile", user.key().as_ref()],
        bump
    )]
    pub profile: Account<'info, Profile>,
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[account]
pub struct Profile {
    pub owner: Pubkey,
    pub name: String,
}
