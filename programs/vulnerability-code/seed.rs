use anchor_lang::prelude::*;

declare_id!("SeedCanon1111111111111111111111111111111111");

#[program]
pub mod seed_canon_example {
    use super::*;

    pub fn initialize_account(
        ctx: Context<InitializeAccount>, 
        bump: u8, 
        initial_value: u64
    ) -> Result<()> {
        ctx.accounts.user_data.bump = bump;
        ctx.accounts.user_data.value = initial_value;
        Ok(())
    }

    pub fn update_account(
        ctx: Context<UpdateAccount>, 
        new_value: u64
    ) -> Result<()> {
        ctx.accounts.user_data.value = new_value;
        Ok(())
    }
}

#[derive(Accounts)]
#[instruction(bump: u8)]
pub struct InitializeAccount<'info> {
    #[account(
        init, 
        seeds = [user.key().as_ref()], 
        bump = bump,
        payer = user, 
        space = 8 + 1 + 8
    )]
    pub user_data: Account<'info, UserData>,
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[derive(Accounts)]
pub struct UpdateAccount<'info> {
    #[account(
        mut, 
        seeds = [user.key().as_ref()], 
        bump = user_data.bump
    )]
    pub user_data: Account<'info, UserData>,
    pub user: Signer<'info>,
}

#[account]
pub struct UserData {
    pub bump: u8,
    pub value: u64,
}
