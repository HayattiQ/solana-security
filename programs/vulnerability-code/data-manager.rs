use anchor_lang::prelude::*;

declare_id!("11111111111111111111111111111111TypCosP");

#[program]
pub mod data_manager {
    use super::*;

    pub fn execute(ctx: Context<Execute>) -> Result<()> {
        let data = ctx.accounts.data_account.try_borrow_data()?;
        let user = User::try_from_slice(&data)?;
        msg!("Authority: {}", user.authority);
        msg!("Value: {}", user.value);
        Ok(())
    }
}

#[derive(Accounts)]
pub struct Execute<'info> {
    pub data_account: AccountInfo<'info>,
    pub authority: Signer<'info>,
}

#[derive(AnchorSerialize, AnchorDeserialize)]
pub struct User {
    pub authority: Pubkey,
    pub value: u64,
}
